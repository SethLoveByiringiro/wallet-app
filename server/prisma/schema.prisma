// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  email        String        @unique
  password     String
  firstName    String?
  lastName     String?
  accounts     Account[]
  transactions Transaction[]
  categories   Category[]
  budgets      Budget[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Account {
  id           String        @id @default(uuid())
  name         String
  type         AccountType
  balance      Float         @default(0)
  currency     String        @default("USD")
  user         User          @relation(fields: [userId], references: [id])
  userId       String
  transactions Transaction[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Transaction {
  id          String          @id @default(uuid())
  type        TransactionType
  amount      Float
  description String
  date        DateTime        @default(now())
  category    Category        @relation(fields: [categoryId], references: [id])
  categoryId  String
  account     Account         @relation(fields: [accountId], references: [id])
  accountId   String
  user        User            @relation(fields: [userId], references: [id])
  userId      String
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
}

model Category {
  id            String        @id @default(uuid())
  name          String
  type          CategoryType
  parent        Category?     @relation("CategoryHierarchy", fields: [parentId], references: [id])
  parentId      String?
  subCategories Category[]    @relation("CategoryHierarchy")
  transactions  Transaction[]
  budgets       Budget[]
  user          User          @relation(fields: [userId], references: [id])
  userId        String
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}

model Budget {
  id                    String       @id @default(uuid())
  amount                Float
  period                BudgetPeriod
  startDate             DateTime
  endDate               DateTime?
  notificationThreshold Float        @default(80) // percentage at which to notify
  category              Category     @relation(fields: [categoryId], references: [id])
  categoryId            String
  user                  User         @relation(fields: [userId], references: [id])
  userId                String
  createdAt             DateTime     @default(now())
  updatedAt             DateTime     @updatedAt
}

enum AccountType {
  BANK
  MOBILE_MONEY
  CASH
  OTHER
}

enum TransactionType {
  INCOME
  EXPENSE
}

enum CategoryType {
  INCOME
  EXPENSE
}

enum BudgetPeriod {
  MONTHLY
  YEARLY
}
